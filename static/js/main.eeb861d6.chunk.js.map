{"version":3,"sources":["assets/noPosterSmall.png","components/Nav.js","api.js","components/Section.js","components/Poster.js","components/Loader.js","components/Message.js","routes/Home/HomePresenter.js","routes/Home/HomeContainer.js","routes/Home/index.js","routes/Tv/TvPresenter.js","routes/Tv/TvContainer.js","routes/Tv/index.js","routes/Detail/DetailPresenter.js","routes/Detail/DetailContainer.js","routes/Detail/index.js","routes/Search/SearchPresenter.js","routes/Search/SearchContainer.js","routes/Search/index.js","Router.js","components/InitialStyles.js","App.js","index.js"],"names":["Nav","styled","nav","ALink","Link","props","current","Button","input","button","withRouter","pathname","location","className","xmlns","viewBox","fill","fillRule","d","clipRule","to","api","axios","create","baseURL","process","params","api_key","language","get","tvApi","id","append_to_response","term","query","movieApi","SectionContainer","div","Title","span","Grid","Section","title","children","PosterContainer","Image","bgUrl","Rating","ImageDiv","Year","Poster","imageUrl","rating","year","isMovie","require","role","length","substring","LoaderConainer","MessageContainer","TextDiv","color","background","Text","Message","type","text","HomeContainer","HomePresenter","popular","upComing","nowPlaying","error","loading","Helmet","Loader","map","element","original_title","poster_path","vote_average","release_date","state","a","data","results","this","setState","React","Component","TvContainer","TvPresenter","topRated","airingToday","original_name","first_air_date","DetailContainer","Backdrop","bgImage","Content","Cover","Data","Devider","Meta","Item","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","index","name","overview","includes","match","push","history","parseIntId","parseInt","isNaN","SearchContainer","Form","form","Input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","defaultValue","onChange","event","preventDefault","searchByTerm","value","target","path","exact","component","Home","Tv","Search","Detail","from","initialStyles","createGlobalStyle","reset","App","Router","InitialStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeb861d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav=styled.nav`\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n\r\n    width: 100%;\r\n    height: 56px;\r\n    padding: 16px;\r\n    \r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    background-color: rgba(25,25,25,1);\r\n    box-shadow: 0 2px 10px 2px rgba(45,45,45,0.5);\r\n    div {\r\n        height: 24px;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst ALink=styled(Link)`\r\n    height: 56px;\r\n    font-size:16px;\r\n    font-weight:400;\r\n    \r\n    margin-left: 10px;\r\n    text-transform: uppercase;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 2px solid ${props => props.current ? \"#778beb\" : \"transparent\"};\r\n    &:nth-child(1){\r\n        margin-left:15px;\r\n    }\r\n\r\n    transition: all 0.2s ease-in;\r\n    &:hover{\r\n        color: whitesmoke;\r\n        opacity: 0.5;\r\n    }\r\n`;\r\nconst Input=styled.input`\r\n    margin-left: 20px;\r\n    width: 60vw;\r\n    height: 25px;\r\n    text-align: center;\r\n    transition: all 0.2s ease-in;\r\n    background-color: rgba(25,25,25,1);\r\n    box-shadow: 0 2px 2px 2px rgba(45,45,45,0.5);\r\n    @media screen and (max-width: 1000px) {\r\n        width: 50vw;\r\n    }\r\n    @media screen and (max-width: 500px){\r\n        width: 40vw;\r\n    }\r\n`;\r\nconst Button=styled.button`\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    transition: all 0.2s ease-in;\r\n    &:hover {\r\n        color: whitesmoke;\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n// export default withRouter(props=>());\r\n// export default withRouter(({ location: { pathname } }) => ());\r\nexport default withRouter( ({ location: { pathname } }) =>(\r\n    <Nav>\r\n        <div>\r\n            <Button className=\"menu\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n            </Button>\r\n            {/* You have 2 method... But 2nd method make some warning */}\r\n            {/* ALink current={pathname===\"/\" ? \"text\" : null}*/}\r\n            {/* Alink current={pathname===\"/\"} */}\r\n            <ALink current={pathname===\"/\" ? \"/\" : null} to=\"/\">Home</ALink>\r\n            <ALink current={pathname===\"/tv\" ? \"/tv\" : null} to=\"/tv\">Tv</ALink>\r\n            <ALink current={pathname===\"/search\" ? \"/search\" : null} to=\"/search\">Search</ALink>\r\n            {/* <Input placeholder=\"red\" type=\"text\"/> */}\r\n        </div>\r\n        <div>\r\n            <ALink to=\"https://github.com/unchaptered?tab=repositories\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n            </ALink>\r\n        </div>\r\n    </Nav>\r\n) );","import axios from \"axios\";\r\n\r\nconst api=axios.create({\r\n    baseURL: process.env.REACT_APP_URL,\r\n    params:{\r\n        api_key: process.env.REACT_APP_API,\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\napi.get(\"tv/popular\");\r\n\r\nexport const tvApi={\r\n    popular:()=>api.get(\"tv/popular\"),\r\n    topRated:()=>api.get(\"tv/top_rated\"),\r\n    airingToday:()=>api.get(\"tv/airing_today\"),\r\n    tvDetail:(id)=>api.get(`tv/${id}`,{\r\n        params: { append_to_response: \"videos\" }\r\n    }),\r\n    tvSearch:(term)=>api.get(\"search/tv\",{\r\n        params: { query: term }\r\n    }),\r\n};\r\n\r\nexport const movieApi={\r\n    popular:()=>api.get(\"movie/popular\"),\r\n    upComing:()=>api.get(\"movie/upcoming\"),\r\n    nowPlaying:()=>api.get(\"movie/now_playing\"),\r\n    movieDetail:(id)=>api.get(`movie/${id}`,{\r\n        params: { append_to_response: \"videos\" }\r\n    }),\r\n    movieSearch:(term)=>api.get(\"search/movie\",{\r\n        params: { query: term }\r\n    }),\r\n};\r\n\r\n// Search 알고리즘에서 encoding 은 axios 가 자동으로 지원해줌.\r\n// 그럼에도 인코딩을 하고싶으면... encodeURIComponent(term)","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionContainer=styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title=styled.span`\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst Grid=styled.div`\r\n    margin-top: 10px;\r\n    background-color: rgba(50,50,50,0.2);\r\n    padding: 20px 20px;\r\n\r\n    gap: 10px;\r\n    display: grid;\r\n    /* grid-template-columns: repeat(auto-fill, 250px); */\r\n    grid-template-columns: repeat(6,1fr);\r\n    justify-content: space-between;\r\n    @media screen and (max-width:1500px){\r\n        grid-template-columns: repeat(5,1fr);\r\n    }\r\n    @media screen and (max-width:1200px){\r\n        grid-template-columns: repeat(4,1fr);\r\n    }\r\n    @media screen and (max-width:900px) {\r\n        grid-template-columns: repeat(3,1fr);\r\n    }\r\n    @media screen and (max-width: 600px){\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n    justify-content: space-space-around;\r\n`;\r\n\r\n\r\nconst Section=({title,children})=>(\r\n    <SectionContainer>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </SectionContainer>\r\n);\r\n\r\nSection.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PosterContainer=styled.div`\r\n    font-size:  12px;\r\n`;\r\n\r\n\r\nconst Image=styled.div`\r\n    background-image: url(${props=>props.bgUrl});\r\n    height: 350px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating=styled.span`\r\n    position: absolute;\r\n    bottom: 31px;\r\n    right: 5px;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\nconst ImageDiv=styled.div`\r\n        margin-bottom:5px;\r\n        &:hover{\r\n            ${Image} {\r\n                opacity: 0.3;\r\n            }\r\n            ${Rating} {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    \r\n        position: relative;\r\n    `;\r\nconst Title=styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\nconst Year=styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst Poster=({id, imageUrl, title, rating, year, isMovie=false})=>(\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}` } >\r\n\r\n        <PosterContainer>\r\n            <ImageDiv>\r\n                <Image\r\n                    bgUrl={ imageUrl ?\r\n                        `https://image.tmdb.org/t/p/w300${imageUrl}` :\r\n                        require(\"../assets/noPosterSmall.png\")\r\n                    } />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n                <Year>{year}</Year>\r\n                <Title>\r\n                    {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n                </Title>\r\n            </ImageDiv>\r\n        </PosterContainer>\r\n\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes={\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n\r\n    isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoaderConainer=styled.div`\r\n    position: fixed;\r\n    padding: 0 10px;\r\n\r\n    height: 100vh;\r\n    width:  100vw;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-size: 32px;\r\n`;\r\n\r\nexport default ()=>(\r\n    <LoaderConainer>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⚡⚡⚡\r\n        </span>\r\n    </LoaderConainer>\r\n)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MessageContainer=styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\n\r\nconst TextDiv=styled.div`\r\nwidth: 100%;\r\nmax-width: 500px;\r\nmargin-top: 15px;\r\npadding: 15px;\r\n\r\ntext-align:center;\r\nfont-weight: 600;\r\ncolor: ${props => props.color};\r\nbackground-color: ${props=> props.background};\r\n`;\r\n\r\n\r\nconst Text=styled.span`\r\n`;\r\n\r\nconst Message=({color,background,type,text})=>(\r\n    <MessageContainer>\r\n        <TextDiv color={color} background={background}> \r\n            <Text>{type} : {text}</Text>\r\n        </TextDiv>\r\n    </MessageContainer>\r\n);\r\n\r\nMessage.propTypes={\r\n    text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Section from \"../../components/Section\";\r\nimport Poster from \"../../components/Poster\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst HomeContainer=styled.div`\r\n    padding: 0 10px;\r\n`;\r\n\r\nconst HomePresenter=({ popular, upComing, nowPlaying, error, loading })=>\r\n    <>\r\n    <Helmet>\r\n        <title>Movies | Unchaptered</title>\r\n    </Helmet>\r\n    { loading ?\r\n        (<Loader />) :\r\n        (\r\n            <HomeContainer>\r\n                { nowPlaying && nowPlaying.length>0 &&\r\n                    ( <Section title=\"Now Playing\">\r\n                            { nowPlaying.map(\r\n                            element=>\r\n                            <Poster\r\n                                key={element.id}\r\n                                id={element.id}\r\n                                title={element.original_title}\r\n                                imageUrl={element.poster_path}\r\n                                rating={element.vote_average}\r\n                                year={element.release_date.substring(0, 4)}\r\n                                isMovie={true}/>\r\n                            ) }\r\n                    </Section>\r\n                )}\r\n                { popular && popular.length>0 &&\r\n                    ( <Section title=\"Popular Movie\">\r\n                            { popular.map(\r\n                            element=>\r\n                            <Poster\r\n                                key={element.id}\r\n                                id={element.id}\r\n                                title={element.original_title}\r\n                                imageUrl={element.poster_path}\r\n                                rating={element.vote_average}\r\n                                year={element.release_date.substring(0, 4)}\r\n                                isMovie={true}/>\r\n                            ) }\r\n                    </Section>\r\n                )}\r\n                { upComing && upComing.length>0 &&\r\n                    ( <Section title=\"UpComing Movie\">\r\n                            { upComing.map(\r\n                            element=>\r\n                            <Poster\r\n                                key={element.id}\r\n                                id={element.id}\r\n                                title={element.original_title}\r\n                                imageUrl={element.poster_path}\r\n                                rating={element.vote_average}\r\n                                year={element.release_date.substring(0, 4)}\r\n                                isMovie={true}/>\r\n                            ) }\r\n                    </Section>\r\n                )}\r\n                { error &&\r\n                    <Message type=\"error\" text={error} color=\"rgba(255, 255,190,1)\" background=\"rgba(200, 90, 60,1.0)\" />\r\n                }\r\n            </HomeContainer>\r\n        )}\r\n    </>;\r\n\r\n\r\n// If any conditions is false, HomePresenter render null;\r\nHomePresenter.propTypes={\r\n    popular:PropTypes.array,\r\n    upComing:PropTypes.array,\r\n    nowPlaying:PropTypes.array,\r\n    error:PropTypes.string,\r\n    loading:PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n\r\n\r\n\r\n// {\r\n//     nowPlaying &&\r\n//     nowPlaying.length > 0 &&\r\n//     (\r\n//         <Section title=\"Now Playing\">\r\n//             {\r\n//                 nowPlaying.map(element=>element.title)\r\n//             }\r\n//         </Section>\r\n//     )\r\n// }","import React from \"react\";\r\nimport { movieApi } from \"../../api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component{\r\n    // Declare state\r\n    state={\r\n        popular:null,\r\n        upComing:null,\r\n        nowPlaying:null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const { data: { results:popular } }=await movieApi.popular();\r\n            const { data: { results:upComing } }=await movieApi.upComing();\r\n            const { data: { results:nowPlaying } }=await movieApi.nowPlaying();\r\n\r\n            this.setState({ popular, upComing, nowPlaying });\r\n        }catch{\r\n            this.setState({ error:\"Can't find movies information\" });\r\n        }finally{\r\n            this.setState({ loading:false });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const { popular, upComing, nowPlaying, error, loading }=this.state;\r\n        return <HomePresenter\r\n            popular={popular}\r\n            upComing={upComing}\r\n            nowPlaying={nowPlaying}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    };\r\n}\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Section from \"../../components/Section\";\r\nimport Poster from \"../../components/Poster\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst TvContainer=styled.div`\r\n    padding: 0 10px;\r\n`;\r\n\r\nconst TvPresenter=({ popular, topRated, airingToday, error, loading })=>\r\n    <>\r\n    <Helmet>\r\n        <title>Tv Shows | Unchaptered</title>\r\n    </Helmet>\r\n    {loading ?\r\n        (<Loader />) :\r\n        (\r\n            <TvContainer>\r\n                { popular && popular.length > 0 &&\r\n                    ( <Section title=\"Popular Tv Shows\">\r\n                            { popular.map(element=>\r\n                                <Poster\r\n                                    key={element.id}\r\n                                    id={element.id}\r\n                                    title={element.original_name}\r\n                                    imageUrl={element.poster_path}\r\n                                    rating={element.vote_average}\r\n                                    year={element.first_air_date.substring(0, 4)}\r\n                                    isMovie={false}/>\r\n                            ) }\r\n                    </Section>\r\n                )}\r\n                { topRated && topRated.length > 0 &&\r\n                    ( <Section title=\"Top Rated Tv Shows\">\r\n                            { topRated.map(element=>\r\n                                <Poster\r\n                                    key={element.id}\r\n                                    id={element.id}\r\n                                    title={element.original_name}\r\n                                    imageUrl={element.poster_path}\r\n                                    rating={element.vote_average}\r\n                                    year={element.first_air_date.substring(0, 4)}\r\n                                    isMovie={false}/>\r\n                            ) }\r\n                    </Section>\r\n                )}\r\n                { airingToday && airingToday.length > 0 &&\r\n                    ( <Section title=\"Airing Today Tv Shows\">\r\n                            { airingToday.map(element=>\r\n                                <Poster\r\n                                    key={element.id}\r\n                                    id={element.id}\r\n                                    title={element.original_name}\r\n                                    imageUrl={element.poster_path}\r\n                                    rating={element.vote_average}\r\n                                    year={element.first_air_date.substring(0, 4)}\r\n                                    isMovie={false}/>\r\n                            ) }\r\n                    </Section>\r\n                )}\r\n                { error &&\r\n                    <Message type=\"error\" text={error} color=\"rgba(255, 255,190,1)\" background=\"rgba(200, 90, 60,1.0)\" />\r\n                }\r\n            </TvContainer>\r\n        )}\r\n    </>;\r\n\r\nTvPresenter.propTypes={\r\npopular:PropTypes.array,\r\ntopRated:PropTypes.array,\r\nairingToday:PropTypes.array,\r\nerror:PropTypes.string,\r\nloading:PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TvPresenter;","import React from \"react\";\r\nimport { tvApi } from \"../../api\";\r\nimport TvPresenter from \"./TvPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    state={\r\n        popular:null,\r\n        topRated:null,\r\n        airingToday:null,\r\n        error:null,\r\n        loading:true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const { data: { results:popular } }=await tvApi.popular();\r\n            const { data: { results:topRated } }=await tvApi.topRated();\r\n            const { data: { results:airingToday } }=await tvApi.airingToday();\r\n\r\n            this.setState({ popular, topRated, airingToday });\r\n        }catch{\r\n            this.setState({ error:\"Can't find Tv information\" });\r\n        }finally{\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const { popular, topRated, airingToday, error, loading }=this.state;\r\n        return <TvPresenter\r\n            popular={popular}\r\n            topRated={topRated}\r\n            airingToday={airingToday}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    }\r\n}","import TvContainer from \"./TvContainer\";\r\n\r\nexport default TvContainer;","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes, { element } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../components/Loader\";\r\n\r\nconst DetailContainer=styled.div`\r\n    /* navTop 56px main padding-top 15px*3  */\r\n    width: 100%;\r\n    height: calc(100vh - 56px);\r\n    position: relative;\r\n    display: grid;\r\n    padding: 50px;\r\n    gap: 20px;\r\n    grid-template-columns: 1fr 3fr;\r\n    @media screen and (max-width:1500px){\r\n        grid-template-columns: 1fr 2fr;\r\n    }\r\n    @media screen and (max-width:1200px){\r\n        grid-template-columns: 1fr 1.5fr;\r\n    }\r\n    @media screen and (max-width:900px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n    @media screen and (max-width: 600px){\r\n        grid-template-rows: 4fr 1fr;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\nconst Backdrop=styled.div`\r\n    position: absolute;\r\n    z-index:0;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props=>props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.3;\r\n`;\r\nconst Content=styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: flex;\r\n    height: 100%;\r\n\r\n`;\r\nconst Cover=styled.div`\r\n    z-index:2;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props=>props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    /* @media screen and (max-width: 600px){\r\n        width:80%;\r\n        background-size: scale-down;\r\n    } */\r\n`;\r\nconst Data=styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\nconst Devider=styled.span`\r\nmargin: 0 3px;\r\n`;\r\nconst Title=styled.span`\r\n    font-size: 26px;\r\n    margin-bottom: 10px;\r\n    @media screen and (max-width:1500px){\r\n        font-weight: 24px;\r\n    }\r\n    @media screen and (max-width:1200px){\r\n        font-size: 22px;\r\n    }\r\n    @media screen and (max-width:900px) {\r\n        font-size: 20px;\r\n    }\r\n    @media screen and (max-width: 600px){\r\n        font-size: 18px;\r\n    }\r\n`;\r\nconst Meta=styled.div`\r\n`;\r\nconst Item=styled.span`\r\n    opacity: 0.5;\r\n    margin-bottom: 10px;\r\n    @media screen and (max-width: 600px){\r\n        font-size: 14px;\r\n    }\r\n`;\r\nconst Divider=styled.span`\r\n    opacity: 0.5;\r\n`;\r\nconst Overview=styled.p`\r\n    opacity: 0.5;\r\n    @media screen and (max-width: 600px){\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst DetailPresenter=({ result, error, loading })=>\r\n    loading ?\r\n        ( \r\n        <>\r\n            <Helmet>\r\n                <title>Loading... | Unchaptered</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n        ) : (\r\n        <>\r\n            <Helmet>\r\n                <title>{result.original_title ?\r\n                        result.original_title :\r\n                        result.original_name } | Unchaptered</title>\r\n            </Helmet>\r\n            <DetailContainer>\r\n                <Backdrop\r\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n                />\r\n                <Content>\r\n                    <Cover\r\n                        bgImage={ result.poster_path ?\r\n                                `https://image.tmdb.org/t/p/original${result.poster_path}` :\r\n                                require(\"../../assets/noPosterSmall.png\") }/>\r\n                </Content>\r\n                <Data>\r\n                    <Title>{ result.original_title ?\r\n                        result.original_title :\r\n                        result.original_name }</Title>\r\n                    <Meta>\r\n                        <Item>{result.release_date ?\r\n                            result.release_date.substring(0,4) :\r\n                            result.first_air_date.substring(0,4)\r\n                        }</Item>\r\n                        <Devider> ◽ </Devider>\r\n                        <Item>{result.runtime ?\r\n                            result.runtime :\r\n                            result.episode_run_time[0]\r\n                        } MIN </Item>\r\n                        <Devider> ◽ </Devider>\r\n                        <Item>\r\n                            { result.genres &&\r\n                                result.genres.map((genres,index)=>\r\n                                    index===result.genres.length+1 ?\r\n                                    `${genres.name}` :\r\n                                    `${genres.name} / `\r\n                            )}\r\n                        </Item>\r\n                    </Meta>\r\n                    <Overview>{result.overview}</Overview>\r\n                </Data>\r\n            </DetailContainer>\r\n        </>);\r\n\r\nDetailPresenter.propTypes={\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import React from \"react\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const { location: { pathname }}=props;\r\n\r\n        this.state={\r\n            result:null,\r\n            error:null,\r\n            loading:true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {\r\n            match: { params: { id } },\r\n            history: { push },\r\n        }=this.props;\r\n        const { isMovie }=this.state;\r\n\r\n        const parseIntId=parseInt(id);\r\n        if(isNaN(parseIntId))\r\n            return push(\"/\");\r\n\r\n        let result=null;\r\n        try{\r\n            ({ data:result }=(isMovie) ?\r\n                await movieApi.movieDetail(parseIntId) :\r\n                await tvApi.tvDetail(parseIntId));\r\n            \r\n        }catch{\r\n            this.setState({ error: \"Can't find anything.\"});\r\n        }finally{\r\n            this.setState({ loading:false, result });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { result, error, loading }=this.state;\r\n        \r\n        return <DetailPresenter\r\n            result={result}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    };\r\n};","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Section from \"../../components/Section\";\r\nimport Poster from \"../../components/Poster\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst SearchContainer=styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nconst Form=styled.form`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\n`;\r\n\r\nconst Input=styled.input`\r\nwidth: 100%;\r\nmax-width: 500px;\r\nheight: 28px;\r\nfont-size: 18px;\r\npadding-left: 15px;\r\nbackground-color: rgba(255,255,255,0.1);\r\n    &::placeholder{\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst SearchPresenter=({ movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm })=>\r\n    <>\r\n        <Helmet>\r\n            <title>Search | Unchaptered</title>\r\n        </Helmet>\r\n        <SearchContainer>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Input placeholder=\"Search Movies or Tv Shows...\" defaultValue={searchTerm} onChange={updateTerm}/>\r\n            </Form>\r\n            {\r\n                loading ?\r\n                    (<Loader/>) :\r\n                    (<>\r\n                        { movieResults && movieResults.length>0 &&\r\n                            ( <Section title=\"Movie Results\">\r\n                                { movieResults.map(element=>\r\n                                    <Poster\r\n                                        key={element.id}\r\n                                        id={element.id}\r\n                                        title={element.original_title}\r\n                                        imageUrl={element.poster_path}\r\n                                        rating={element.vote_average}\r\n                                        year={element.release_date.substring(0, 4)}\r\n                                        isMovie={true}/>\r\n                                ) }\r\n                            </Section>\r\n                        )}\r\n                        { tvResults && tvResults.length>0 &&\r\n                            ( <Section title=\"Tv Shows Results\">\r\n                                { tvResults.map(element=>\r\n                                    <Poster\r\n                                        key={element.id}\r\n                                        id={element.id}\r\n                                        title={element.original_name}\r\n                                        imageUrl={element.poster_path}\r\n                                        rating={element.vote_average}\r\n                                        year={element.first_air_date.substring(0, 4)}\r\n                                        isMovie={false}/>\r\n                                ) }\r\n                            </Section>\r\n                        )}\r\n                        { error &&\r\n                            <Message type=\"Error\" text={error} color=\"rgba(255, 255,190,1)\" background=\"rgba(200, 90, 60,1.0)\" />\r\n                        }\r\n                        { movieResults && tvResults && movieResults.length<1 && tvResults.length<1 &&\r\n                            <Message type=\"404\" text=\"Nothing Found\" color=\"rgba(180, 200, 255,1)\" background=\"rgba(60, 90, 200,1.0)\" />\r\n                        }\r\n                    </>)\r\n            }\r\n        </SearchContainer>\r\n    </>;\r\n\r\nSearchPresenter.propTypes={\r\nmovieResults: PropTypes.array,\r\ntvResults: PropTypes.array,\r\nsearchTerm: PropTypes.string,\r\nerror:PropTypes.string,\r\nloading:PropTypes.bool.isRequired,\r\n\r\nhandleSubmit: PropTypes.func.isRequired,\r\nupdateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state={\r\n        movieResults:null,\r\n        tvResults:null,\r\n        searchTerm:\"\",\r\n        error:null,\r\n        loading:false,\r\n    };\r\n    handleSubmit=event=>{\r\n        event.preventDefault();\r\n        const { searchTerm }=this.state;\r\n        if(searchTerm!==\"\")\r\n            this.searchByTerm();\r\n    };\r\n    updateTerm=event=>{\r\n        const { value }=event.target;\r\n        this.setState({ searchTerm: value })\r\n    };\r\n    searchByTerm=async()=>{\r\n        const { searchTerm }=this.state;\r\n        this.setState({loading:true});\r\n        try{\r\n            const { data:{ results:movieResults } }=await movieApi.movieSearch(searchTerm);\r\n            const { data:{ results:tvResults } }=await tvApi.tvSearch(searchTerm);\r\n            this.setState({ movieResults, tvResults });\r\n        }catch(error){\r\n            this.setState({ error: \"Can't find results\" });\r\n        }finally{\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading }=this.state;\r\n\r\n        return <SearchPresenter\r\n            movieResults={movieResults}\r\n            tvResults={tvResults}\r\n            searchTerm={searchTerm}\r\n            error={error}\r\n            loading={loading}\r\n            \r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n        />\r\n    };\r\n}","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport propType from \"prop-types\";\r\n\r\nimport Nav from \"./components/Nav\";\r\n\r\nimport Home from\"./routes/Home\";\r\nimport Tv from \"./routes/Tv\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Search from \"./routes/Search\";\r\n\r\nexport default ()=>{\r\n    return (\r\n        <Router>\r\n            <>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/tv\" exact component={Tv} />\r\n                    <Route path=\"/search\" component={Search} />\r\n\r\n                    <Route path=\"/movie/:id\" component={Detail} />\r\n                    <Route path=\"/tv/:id\" component={Detail} />\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        </Router>\r\n    );\r\n};","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\"\r\n\r\nconst initialStyles=createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        color:inherit;\r\n        text-decoration:initial;\r\n    }\r\n    button {\r\n        color:inherit;\r\n        border: initial;\r\n        background-color: initial;\r\n        padding:0;\r\n        margin:0;\r\n    }\r\n    input {\r\n        opacity: 0.5;\r\n        color:inherit;\r\n        border: initial;\r\n        background-color: inherit;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 15px;\r\n\r\n        color: rgba(255,255,255,1);\r\n        background-color: rgba(25,25,25,1);\r\n\r\n        /* 56px + 25px */\r\n        padding-top: 56px;\r\n\r\n        min-height: 100vh;\r\n        height: auto;\r\n    }\r\n    svg {\r\n        width: 20px;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport default initialStyles;","import React, { Components } from \"react\";\r\n\r\nimport Router from \"./Router\";\r\nimport InitialStyles from \"./components/InitialStyles\";\r\n\r\nclass App extends React.Component  {\r\n    render(){\r\n        return (\r\n            <>\r\n                <Router />\r\n                <InitialStyles />\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './api';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}